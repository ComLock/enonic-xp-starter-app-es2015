plugins {
    id 'java' // Needed for assemble and build
    id 'com.enonic.xp.app' version '1.0.17'
    id 'com.moowork.node' version '1.2.0'
}


repositories {
    jcenter()
    xp.enonicRepo()
}


app {
    name = project.appName
    displayName = 'Change me in build.gradle'
    vendorName = 'Enonic AS'
    vendorUrl = 'http://enonic.com'
    systemVersion = "${xpVersion}"
}


dependencies {
    compile "com.enonic.xp:core-api:${xpVersion}"
    compile "com.enonic.xp:portal-api:${xpVersion}"

    //include "com.enonic.xp:lib-content:${xpVersion}"
    //include "com.enonic.xp:lib-context:${xpVersion}"
    //include "com.enonic.xp:lib-task:${xpVersion}"
    //include "com.enonic.xp:lib-portal:${xpVersion}"
    //include "com.enonic.xp:lib-thymeleaf:${xpVersion}"

    //include 'com.enonic.lib:util:1.3.0'
    //include 'com.enonic.lib:menu:1.3.3'
}


tasks.withType(Copy) {
  includeEmptyDirs = false
}


//──────────────────────────────────────────────────────────────────────────────
// Gradle wrapper
//──────────────────────────────────────────────────────────────────────────────
task wrapper(type: Wrapper) {
	gradleVersion = '4.9'
}


//──────────────────────────────────────────────────────────────────────────────
// Gradle node plugin
//──────────────────────────────────────────────────────────────────────────────
node {
    version '8.11.4'
    download true
}


//──────────────────────────────────────────────────────────────────────────────
// Webpack
//──────────────────────────────────────────────────────────────────────────────
sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
        resources { // Paths relative to src/main/resources
            exclude '**/*.css'
            exclude '**/*.es' // Avoid having your es files copied into ./build
            exclude '**/*.gitkeep'
            exclude '**/*.less'
            exclude '**/*.sass'
            exclude '**/*.scss'
            exclude '**/*.styl'
        }
    }
}


task webpack(type:NodeTask) {
    script = file('node_modules/webpack-cli/bin/cli.js')
    args = [
        '--color'
    ]
}
webpack.dependsOn npmInstall
webpack.mustRunAfter npmInstall
assemble.dependsOn webpack
assemble.mustRunAfter webpack


task watch(type:NodeTask) {
    script = file('node_modules/webpack-cli/bin/cli.js')
    args = [
        '--color',
        '--watch'
    ]
}
